# coding: utf-8

"""
    Surveillance Hub

    Qualytics API  # noqa: E501

    OpenAPI spec version: 5ca80d8
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""

import pprint
import re  # noqa: F401

import six

class GetDatastoreLatestOperations(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """
    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'latest_operation': 'Operation',
        'catalog_operation': 'Operation',
        'profile_operation': 'Operation',
        'scan_operation': 'Operation'
    }

    attribute_map = {
        'latest_operation': 'latest_operation',
        'catalog_operation': 'catalog_operation',
        'profile_operation': 'profile_operation',
        'scan_operation': 'scan_operation'
    }

    def __init__(self, latest_operation=None, catalog_operation=None, profile_operation=None, scan_operation=None):  # noqa: E501
        """GetDatastoreLatestOperations - a model defined in Swagger"""  # noqa: E501
        self._latest_operation = None
        self._catalog_operation = None
        self._profile_operation = None
        self._scan_operation = None
        self.discriminator = None
        if latest_operation is not None:
            self.latest_operation = latest_operation
        if catalog_operation is not None:
            self.catalog_operation = catalog_operation
        if profile_operation is not None:
            self.profile_operation = profile_operation
        if scan_operation is not None:
            self.scan_operation = scan_operation

    @property
    def latest_operation(self):
        """Gets the latest_operation of this GetDatastoreLatestOperations.  # noqa: E501


        :return: The latest_operation of this GetDatastoreLatestOperations.  # noqa: E501
        :rtype: Operation
        """
        return self._latest_operation

    @latest_operation.setter
    def latest_operation(self, latest_operation):
        """Sets the latest_operation of this GetDatastoreLatestOperations.


        :param latest_operation: The latest_operation of this GetDatastoreLatestOperations.  # noqa: E501
        :type: Operation
        """

        self._latest_operation = latest_operation

    @property
    def catalog_operation(self):
        """Gets the catalog_operation of this GetDatastoreLatestOperations.  # noqa: E501


        :return: The catalog_operation of this GetDatastoreLatestOperations.  # noqa: E501
        :rtype: Operation
        """
        return self._catalog_operation

    @catalog_operation.setter
    def catalog_operation(self, catalog_operation):
        """Sets the catalog_operation of this GetDatastoreLatestOperations.


        :param catalog_operation: The catalog_operation of this GetDatastoreLatestOperations.  # noqa: E501
        :type: Operation
        """

        self._catalog_operation = catalog_operation

    @property
    def profile_operation(self):
        """Gets the profile_operation of this GetDatastoreLatestOperations.  # noqa: E501


        :return: The profile_operation of this GetDatastoreLatestOperations.  # noqa: E501
        :rtype: Operation
        """
        return self._profile_operation

    @profile_operation.setter
    def profile_operation(self, profile_operation):
        """Sets the profile_operation of this GetDatastoreLatestOperations.


        :param profile_operation: The profile_operation of this GetDatastoreLatestOperations.  # noqa: E501
        :type: Operation
        """

        self._profile_operation = profile_operation

    @property
    def scan_operation(self):
        """Gets the scan_operation of this GetDatastoreLatestOperations.  # noqa: E501


        :return: The scan_operation of this GetDatastoreLatestOperations.  # noqa: E501
        :rtype: Operation
        """
        return self._scan_operation

    @scan_operation.setter
    def scan_operation(self, scan_operation):
        """Sets the scan_operation of this GetDatastoreLatestOperations.


        :param scan_operation: The scan_operation of this GetDatastoreLatestOperations.  # noqa: E501
        :type: Operation
        """

        self._scan_operation = scan_operation

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(GetDatastoreLatestOperations, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, GetDatastoreLatestOperations):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
